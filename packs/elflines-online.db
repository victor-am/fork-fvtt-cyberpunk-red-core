{"name":"Create an Elflines Online Character","type":"script","author":"3nEUs5uA2hnqUiAe","img":"icons/svg/dice-target.svg","scope":"global","command":"// Set the following to the name of your character to be created\nconst actorName = \"ElfLine\";\n\n// All Elf Online Skills\nconst skills = {\n\"Animal Handling\": { stat: \"emp\", category: \"performanceSkills\", difficulty: \"typical\", },\n\"Language (Elven)\": { stat: \"int\", category: \"educationSkills\", difficulty: \"typical\", },\n\"Archery\": { stat: \"ref\", category: \"rangedweaponSkills\", difficulty: \"difficult\", },\n\"Melee Weapon\": { stat: \"dex\", category: \"fightingSkills\", difficulty: \"difficult\", },\n\"Athletics/Contortionist\": { stat: \"dex\", category: \"bodySkills\", difficulty: \"typical\", },\n\"Perception\": { stat: \"int\", category: \"awarenessSkills\", difficulty: \"typical\", },\n\"Basic Tech/Weaponstech\": { stat: \"tech\", category: \"techniqueSkills\", difficulty: \"typical\", },\n\"Persuasion/Trading\": { stat: \"cool\", category: \"socialSkills\", difficulty: \"typical\", },\n\"Brawling\": { stat: \"dex\", category: \"fightingSkills\", difficulty: \"typical\", },\n\"Pick Lock/Pick Pocket\": { stat: \"tech\", category: \"techniqueSkills\", difficulty: \"typical\", },\n\"Conceal/Reveal Object\": { stat: \"int\", category: \"awarenessSkills\", difficulty: \"typical\", },\n\"Pilot Sea Vehicle\": { stat: \"tech\", category: \"controlSkills\", difficulty: \"typical\", },\n\"Composition/Education\": { stat: \"int\", category: \"educationSkills\", difficulty: \"typical\", },\n\"Play Instrument\": { stat: \"tech\", category: \"performanceSkills\", difficulty: \"typical\", },\n\"Concentration\": { stat: \"will\", category: \"awarenessSkills\", difficulty: \"typical\", },\n\"Riding\": { stat: \"emp\", category: \"controlSkills\", difficulty: \"typical\", },\n\"Endurance/Resist Torture/Drugs\": { stat: \"will\", category: \"bodySkills\", difficulty: \"typical\", },\n\"Stealth\": { stat: \"dex\", category: \"bodySkills\", difficulty: \"typical\", },\n\"Evasion/Dance\": { stat: \"dex\", category: \"fightingSkills\", difficulty: \"difficult\", },\n\"Tracking\": { stat: \"int\", category: \"awarenessSkills\", difficulty: \"typical\", },\n\"First Aid/Paramedic/Surgery\": { stat: \"tech\", category: \"techniqueSkills\", difficulty: \"difficult\", },\n\"Wilderness Survival\": { stat: \"int\", category: \"educationSkills\", difficulty: \"typical\", },\n};\n\n// Create Elf Online Character\nconst elfCharacter = await Actor.create({\n          name: actorName,\n          type: \"character\",\n});\n\nconst skillList = [];\nObject.keys(skills).forEach(async (name) => {\n   const stat = skills[name].stat;\n   const category = skills[name].category;\n   const difficulty = skills[name].difficulty;\n   const itemData = {\n      type: \"skill\",\n      name,\n      data: {\n            stat,\n            category,\n            difficulty,\n            core: false,\n            },\n      };\n   skillList.push(itemData);\n});\n\n// Create Elf Online Skills\nconst createdSkills = await elfCharacter.createEmbeddedDocuments(\"Item\", skillList, { force: true });\n\n// Create array to update and set core to true to prevent deletion\nconst coreSkills = [];\ncreatedSkills.forEach((skill) => {\n   if (skill.name !== \"Language (Elven)\" ) {\n      coreSkills.push({ _id: skill.id, \"data.core\": true });\n   }\n});\n\nelfCharacter.updateEmbeddedDocuments(\"Item\", coreSkills );","folder":null,"sort":0,"permission":{"default":0,"5r9ayK5zRFrpL90O":3,"3nEUs5uA2hnqUiAe":3},"flags":{"core":{"sourceId":"Macro.H7Oo6dSOkNtTgu5K"}},"_id":"LF9tUG2mi1fxyxrP"}
{"name":"Create Elflines Online Armory","type":"script","author":"3nEUs5uA2hnqUiAe","img":"icons/svg/dice-target.svg","scope":"global","command":"// Get all packs as a basis for the equivalency items\nconst armorPack = game.packs.get(\"cyberpunk-red-core.armor-items\");\nconst weaponPack = game.packs.get(\"cyberpunk-red-core.weapons-items\");\nconst ammoPack = game.packs.get(\"cyberpunk-red-core.ammo-items\");\nconst gearPack = game.packs.get(\"cyberpunk-red-core.gear-items\");\n\nconst armorContent = await armorPack.getDocuments();\nconst weaponContent = await weaponPack.getDocuments();\nconst ammoContent = await ammoPack.getDocuments();\nconst gearContent = await gearPack.getDocuments();\n\n// Identify/Create folder for items\nconst folderList = game.folders.filter((folder) => folder.name === \"Elflines Online Armory\" && folder.type === \"Item\");\nconst elOnlineArmoryFolder = (folderList.length === 1) ? folderList[0] : await Folder.create({ name: \"Elflines Online Armory\", type: \"Item\" });\n\n// Identify the items of Elflines Online\nconst armoryItems = {\n  \"Leather Armor\": { type: \"armor\", equivalent: \"Leathers (Body)\", price: 20, },\n  \"Studded Leather Armor\": { type: \"armor\", equivalent: \"Kevlar (Body)\", price: 50, },\n  \"Chainmail Armor\": { type: \"armor\", equivalent: \"Medium Armorjack (Body)\", price: 100, },\n  \"Full Plate Armor\": { type: \"armor\", equivalent: \"Flak (Body)\", price: 500, },\n  \"Shield\": { type: \"armor\", equivalent: \"Bullet Proof Shield\", price: 100, },\n  \"Dagger\": { type: \"weapon\", equivalent: \"Combat Knife\", price: 50, },\n  \"Shortsword\": { type: \"weapon\", equivalent: \"Crowbar\", price: 50, },\n  \"Longsword\": { type: \"weapon\", equivalent: \"Lead Pipe\", price: 100, rof: 1, },\n  \"Greataxe\": { type: \"weapon\", equivalent: \"Naginata\", price: 500, hands: 2, },\n  \"Bow\": { type: \"weapon\", equivalent: \"Bow\", price: 100, },\n  \"Arrow\": { type: \"ammo\", equivalent: \"Basic Arrow\", price: 1, },\n  \"Poison Arrow\": { type: \"ammo\", equivalent: \"Poison Arrow\", price: 10, },\n  \"Vial of Poison\": { type: \"gear\", equivalent: \"Vial of Poison\", price: 100, },\n  \"Sacred Herbs\": { type: \"gear\", equivalent: \"None\", price: 50, },\n};\n\n// Create each item in folder\nObject.keys(armoryItems).forEach(async (itemName) => {\n\n  const itemType = armoryItems[itemName].type;\n  const cprItem = armoryItems[itemName].equivalent;\n  const price =  armoryItems[itemName].price;\n  let itemSearch;\n  if (cprItem !== \"None\") {\n\n    switch (itemType) {\n      case \"weapon\": {\n        itemSearch = weaponContent.filter((i) => i.name === cprItem);\n        break;\n      }\n      case \"armor\": {\n        itemSearch = armorContent.filter((i) => i.name === cprItem);\n        break;\n      }\n      case \"gear\": {\n        itemSearch = gearContent.filter((i) => i.name === cprItem);\n        break;\n      }\n      case \"ammo\": {\n        itemSearch = ammoContent.filter((i) => i.name === cprItem);\n        break;\n      }\n      default:\n    }\n  }\n\n  if (typeof itemSearch !== \"undefined\" && itemSearch.length === 1) {\n    const sourceItem = itemSearch[0];\n    const itemData = duplicate(sourceItem.data);\n    itemData.name =  itemName;\n    itemData.data.price.market = price;\n    itemData.folder = elOnlineArmoryFolder;\n    await Item.create(itemData);\n  } else {\n    const itemData = {\n      name: itemName,\n      type: \"gear\",\n      folder: elOnlineArmoryFolder.id,\n      \"data.price.market\": price,\n    };\n    await Item.create(itemData);\n  }\n});","folder":null,"sort":0,"permission":{"default":0,"5r9ayK5zRFrpL90O":3,"3nEUs5uA2hnqUiAe":3},"flags":{"core":{"sourceId":"Macro.we8ivu23VbWQr0jj"}},"_id":"Oyiup1NieiHZDgJ3"}
